datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model Exploitation {
  id                    Int     @id @default(autoincrement())
  tourneeId             Int
  immatriculation       String
  operateur                 String
  date                  DateTime @default(now())
  type                  String
  clientId              Int
  client                String
  site                  String
  nbContenant           Int
  typeContenant         String
  matiere               String
  poids                 Int
  qualite3              Int
  qualite2              Int
  qualite1              Int
  commentairesRDV       String
  commentairesContenu   String
  photos                String
}

model Tournee {
  id                    Int       @id @default(autoincrement())
  date                  DateTime  @default(now())
  note                  String
  vehicule              Vehicule?
  operateurs            Operateur[]
}

model Usager {
  id                    Int     @id @default(autoincrement())
  nom                   String
  type                  String
  tiers                 String
  contact               String
  adresse               String
  email                 String
  telephone             String
  reference             String
  note                  String
  sites                 Site[]
  contacts              Contact[]
  actif                 Boolean
}

model Site {
  id                    Int     @id @default(autoincrement())
  usager                Usager  @relation(fields: [usagerId], references: [id])
  usagerId              Int
  ordre                 Int
  nom                   String
  adresse               String
  adresse2              String
  codePostal            String
  ville                 String
  latitude              String
  longitude             String
  etage                 Int
  ascenseur             Boolean
  note                  String
  tarifs                Tarif[]
  actif                 Boolean
}

model Contact {
  id          Int     @id @default(autoincrement())
  usager      Usager  @relation(fields: [usagerId], references: [id])
  usagerId    Int
  ordre       Int
  prenom      String
  nom         String
  email       String
  motdepasse  String
  telephone1  String
  telephone2  String
  remarque    String
  fonction    String
  extranet    Boolean
  actif       Boolean
}

model Inventaire {
  id        Int     @id @default(autoincrement())
  site      String
  materiel  String
  quantite  Int
  note      String
  actif     Boolean
}
 
model Tarif {
  id                    Int     @id @default(autoincrement())
  date                  DateTime @default(now())
  site                  Site    @relation(fields: [siteId], references: [id])
  siteId                Int
  prestation            String
  prix                  Float
  passage               Boolean
  bac                   Boolean
  actif                 Boolean
}

model Operateur {
  id        Int     @id @default(autoincrement())
  prenom    String
  nom       String
  actif     Boolean
  tournee   Tournee?    @relation(fields: [tourneeId], references: [id])
  tourneeId Int?
}

model Vehicule {
  id              Int     @id @default(autoincrement())
  nom             String
  immatriculation String
  identifiant     String
  couleur         String
  icone           String
  ordre           Int
  actif           Boolean
  tournee         Tournee?    @relation(fields: [tourneeId], references: [id])
  tourneeId       Int?        @unique
}

model Materiel {
  id        Int     @id @default(autoincrement())
  nom       String
  poids     Int
  actif     Boolean
}

model Matiere {
  id        Int     @id @default(autoincrement())
  nom       String
  actif     Boolean
}