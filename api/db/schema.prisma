datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.

model Customer {
  id      Int       @id @default(autoincrement())
  name    String
  tasks   Task[]
  missions Mission[]
  clients  Client[]
}

model Site {
  id    Int    @id @default(autoincrement())
  name    String

  type    String
  commercial    String
  active    Boolean  @default(false)
  contact    String
  siret    String
  mail    String
  phone    String
  billingAddress    String
  typeofPass    String
  tasks    Task[]
}

model Container {
  id    Int    @id @default(autoincrement())
  name  String
  tasks Task[]
}

model Material {
  id    Int    @id @default(autoincrement())
  name  String
  tasks Task[]
}

model Service {
  id    Int    @id @default(autoincrement())
  name  String
  tasks Task[]
}

model Worker {
  id      Int       @id @default(autoincrement())
  name    String
  tasks   Task[]
  Mission Mission[]
}

model Equipment {
  id     Int    @id @default(autoincrement())
  status String
  //tasks Task[]
}

model Task {
  id          Int       @id @default(autoincrement())
  plannedAt   DateTime
  worker      Worker    @relation(fields: [workerId], references: [id])
  workerId    Int
  customer    Customer  @relation(fields: [customerId], references: [id])
  customerId  Int
  site        Site      @relation(fields: [siteId], references: [id])
  siteId      Int
  container   Container @relation(fields: [containerId], references: [id])
  containerId Int
  material    Material  @relation(fields: [materialId], references: [id])
  materialId  Int
  service     Service   @relation(fields: [serviceId], references: [id])
  serviceId   Int
  start       DateTime  @default(now())
  end         DateTime  @default(now())
  title       String    @default("")
}

model User {
  id                  Int       @id @default(autoincrement())
  email               String    @unique
  hashedPassword      String     // <─┐
  salt                String      //  ┤
  resetToken          String?    // <─┤
  resetTokenExpiresAt DateTime? //    ┤
  userId              Int      //   <─┘
}

model Mission {
  id         Int      @id @default(autoincrement())
  status     String   @default("")
  start      DateTime @default(now())
  end        DateTime @default(now())
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int
  Worker     Worker?  @relation(fields: [workerId], references: [id])
  workerId   Int?
  Client     Client[]
}

model Client {
  id         Int      @id @default(autoincrement())
  name       String   @default("")
  mission    Mission  @relation(fields: [missionId], references: [id])
  missionId  Int
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int
  checked    Boolean  @default(false)
}

